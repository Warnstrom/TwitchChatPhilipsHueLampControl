name: Publish and Release

on:
  push:
    tags:
      - 'dev*'  # Trigger the workflow when a new tag starting with 'dev' is pushed (e.g., v1.0.0)

jobs:
  publish:
    name: Publish and Create Release
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Needed to create or update a GitHub release

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'  # Adjust to your required .NET version

      # Step 3: Publish for Linux-x64
      - name: Publish for Linux-x64
        run: |
          dotnet publish -c Release -r linux-x64 --self-contained true -o ./bin/Release/publish_linux-x64
          cd ./bin/Release/publish_linux-x64
          zip -r ../publish_linux.zip *
          cd -

      # Step 4: Publish for Windows-x64
      - name: Publish for Windows-x64
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true -o ./bin/Release/publish_windows-x64
          cd ./bin/Release/publish_windows-x64
          zip -r ../publish_windows.zip *
          cd -

      # Step 5: Create or Update GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Upload Linux-x64 ZIP as Release Asset
      - name: Upload Linux-x64 Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/publish_linux.zip
          asset_name: publish_linux.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Upload Windows-x64 ZIP as Release Asset
      - name: Upload Windows-x64 Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/publish_windows.zip
          asset_name: publish_windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
